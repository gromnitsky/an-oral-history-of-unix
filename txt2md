#!/usr/bin/env node

'use strict';

let fs = require('fs')
let Transform = require("stream").Transform
let util = require("util")

let split = require('split')

// transform stream; assumes data is already splitted on newlines
let Txt2md = function(names) {
    Transform.call(this)
    this.header = true
    this.names_re = new RegExp(`^ *(${names.join('|')}): `, 'gi')
}
util.inherits(Txt2md, Transform)

Txt2md.prototype._transform = function(line, dummy, next) {
    if (this.header && !line.toString().match(/^\s*$/)) {
	this.header = false
	this.push(`# ${line}\n`)
    } else {
	this.push(line.toString().replace(this.names_re, "<b>$1</b>: ") + "\n")
    }
    next()
}


let names = process.argv.slice(2)
if (names.length === 0) {
    console.error("Usage: txt2md MSM Thompson < thompson.txt")
    process.exit(1)
}

process.stdin
    .pipe(split())
    .pipe(new Txt2md(names))
    .pipe(process.stdout)
